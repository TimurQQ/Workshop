{\rtf1\ansi \deff4\deflang1033{\fonttbl{\f4\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f25\froman\fcharset0\fprq2 Times New Roman;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar \f4\fs20\lang1049 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}}{\info{\author Matuscin V.N.}{\operator Matuscin V.N.}{\creatim\yr1999\mo9\dy23\hr21\min18}
{\revtim\yr1999\mo10\dy17\hr6\min9}{\version2}{\edmins0}{\nofpages1}{\nofwords374}{\nofchars2136}{\*\company MEPhI}{\vern57443}}\paperw11906\paperh16838 \widowctrl\ftnbj\aenddoc\hyphcaps0\formshade \fet0\sectd 
\linex0\headery709\footery709\colsx709\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \widctlpar \f4\fs20\lang1049 \'c7\'e4\'e5\'f1\'fc \'e1\'f3\'e4\'e5\'f2 \'ed\'e0\'f5\'ee
\'e4\'e8\'f2\'fc\'f1\'ff \'f2\'e5\'ea\'f1\'f2 \'ef\'ee\'ec\'ee\'f9\'e8 \'ef\'f0\'e8 \'f0\'e0\'e1\'ee\'f2\'e5 \'f1 \'f3\'f0\'ee\'ea\'ee\'ec{\f25\lang1033 
\par 
\par }{\f25\fs36\lang1033 
This guide describes how to build 32-bit applications for Windows and dynamic-link libraries (DLLs) using the Microsoft Win32 Software Development Kit (SDK). It describes the components of a generalized makefile and includes information on using the C run
-time libraries.
\par 
\par }{\f25\lang1033 The following table summarizes the steps used to build a Win32 application or DLL:
\par 
\par Steps to Building Applications
\par 
\par Step\tab Tool
\par 1.\tab Compile C and C++ source-language files into object files.\tab C/C++ compiler (CL)
\par 2.\tab Create and edit resources. Doing so may also create include (.H) files which define useful constants.\tab Dialog Editor, Image Editor, and Font Editor (DLGEDIT, IMAGEDIT, and FONTEDIT)
\par 3.\tab Compile resource scripts to linkable resource files.\tab Resource Compiler (RC)
\par 4.\tab Compile the module-definition file for each DLL to an import library and export library.\tab Library manager (LIB)
\par 5.\tab Link the object modules, resources, standard libraries, and import libraries (for an application using DLLs) or export library (for a DLL) to produce an application.\tab Linker (LINK)
\par 6.\tab Use the appropriate switches to build a debugging version of the application or DLL.\tab Linker switches: /debug:full, /debugtype:cv
\par If you are familiar with the process of building applications and DLLs for Windows 3.x, you will notice some differences. The following parts of the build process are new or different with Win32:
\par 
\par \'b7\tab Resources are linked along with object modules and libraries. You do not need to run the resource compiler to add resources to the executable file.
\par \'b7\tab When building a DLL, create an import library from a .DEF file, then link the DLL with the import library. The linker does not accept a .DEF file when resolving imports.
\par \'b7\tab When linking a DLL, you must specify the name of the initialization routine using the linker /ENTRY option. This is the result of the new DLL initialization and termination model in Win32.
\par 
\par \'b7\tab You link a DLL with an export library (.EXP file). The export library is generated by LIB at the same time it generates the import library from the .DEF file.
\par 
\par The sample makefiles provided with the SDK samples give good examples of the build process. Each of them includes WIN32.MAK, which defines most of the common ma
cros you need to build 32-bit applications for Windows NT and Windows 95. For information on source code considerations in porting your code from 16- to 32-bits, see the following topics:
\par Porting 16-Bit Code to 32-Bit Windows
\par Handling Messages with Portable Macros
\par Writing Portable C Programs
\par WINDOWS.H and STRICT Type Checking}
\par }